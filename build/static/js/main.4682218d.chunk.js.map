{"version":3,"sources":["components/profile/Profile.module.css","components/Statistics/Statistics.module.css","components/friends/Friends.module.css","components/transaction/Transaction.module.css","components/Section.js","components/profile/Profile.js","components/Statistics/Statistics.js","components/friends/FriendsList.js","components/transaction/Transaction.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","defaultProps","PropTypes","node","isRequired","Profiler","name","tag","location","avatar","stats","className","s","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","statistics","statlist","map","item","string","rgb","Math","floor","random","style","backgroundColor","percentage","id","isNaN","Number","slice","FriendsList","friends","friend","onLine","isOnline","statusOnLine","statusOffLine","width","TransactionHistory","arrayTransaction","transactions","transaction","stroke","word","colorStroke","colorHeading","tdtype","type","split","toUpperCase","amount","currency","App","Profile","user","statisticsData","Transaction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4682218d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3G2Iz\",\"avatar\":\"Profile_avatar__BuDqt\",\"description\":\"Profile_description__1foJj\",\"stats\":\"Profile_stats__14Prh\",\"li\":\"Profile_li__B79aw\",\"name\":\"Profile_name__3CslV\",\"tag\":\"Profile_tag__12nE8\",\"locations\":\"Profile_locations__3TFcK\",\"label\":\"Profile_label__2MOnL\",\"quantity\":\"Profile_quantity__3Rtqj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__hr_6b\",\"title\":\"Statistics_title__2Tw9F\",\"statlist\":\"Statistics_statlist__3jN9c\",\"item\":\"Statistics_item__zrQB3\",\"label\":\"Statistics_label__2Te-e\",\"percentage\":\"Statistics_percentage__DOGIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend-list\":\"Friends_friend-list__3GrbP\",\"item\":\"Friends_item__2d89M\",\"status\":\"Friends_status__nRBSd\",\"statusOffLine\":\"Friends_statusOffLine__20xdm Friends_status__nRBSd\",\"statusOnLine\":\"Friends_statusOnLine__fYTK- Friends_status__nRBSd\",\"avatar\":\"Friends_avatar__19s-a\",\"name\":\"Friends_name__hF629\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"Transaction_transaction__1ePNn\",\"tdtype\":\"Transaction_tdtype__1mX84\",\"colorHeading\":\"Transaction_colorHeading__1W0j6\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h1> {title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\n\r\nfunction Profiler({ name, tag, location, avatar, stats }) {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={avatar} alt={name} className={s.avatar} />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>@{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}> {stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfiler.propTypes = {\r\n  avatar: PropTypes.node,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.exact({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profiler;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction Statistics({ title, statistics }) {\r\n  const stringId = string => (isNaN(string) ? Number(string.slice(3)) : string);\r\n\r\n  return (\r\n    <div className={s.statistics}>\r\n      <h2 className={s.title}>{title}</h2>\r\n\r\n      <ul className={s.statlist}>\r\n        {statistics.map(item => {\r\n          const rgb =\r\n            'rgb(' +\r\n            Math.floor(Math.random() * 256) +\r\n            ',' +\r\n            Math.floor(Math.random() * 256) +\r\n            ',' +\r\n            Math.floor(Math.random() * 256) +\r\n            ')';\r\n\r\n          return (\r\n            <li\r\n              style={{\r\n                backgroundColor: rgb,\r\n              }}\r\n              className={s.item}\r\n              key={stringId(item.id)}\r\n            >\r\n              <span className={s.label}>{item.label} </span>\r\n              <span className={s.percentage}>{item.percentage} %</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  statistics: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      item: PropTypes.objectOf({\r\n        id: PropTypes.number.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired,\r\n      }),\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Friends.module.css';\r\n\r\nfunction FriendsList({ friends }) {\r\n  const status = onLine => (onLine ? s.statusOnLine : s.statusOffLine);\r\n\r\n  return (\r\n    <ul className={s['friend-list']}>\r\n      {friends.map(friend => {\r\n        return (\r\n          <li className={s.item} key={friend.id}>\r\n            <span className={status(friend.isOnline)}></span>\r\n            <img\r\n              className={s.avatar}\r\n              src={friend.avatar}\r\n              alt={friend.name}\r\n              width=\"48\"\r\n            />\r\n            <p className={s.name}>{friend.name}</p>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendsList.propTypes = {\r\n  friend: PropTypes.exact({\r\n    id: PropTypes.number.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default FriendsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Transaction.module.css';\r\n\r\nfunction UpperCase(word) {\r\n  return word.split('')[0].toUpperCase() + word.slice(1);\r\n}\r\n\r\nfunction TransactionHistory({ transactions }) {\r\n  const arrayTransaction = transactions.map((transaction, stroke) => {\r\n    const colorStroke = stroke % 2 !== 0 ? s.colorHeading : 0;\r\n\r\n    return (\r\n      <tr key={transaction.id} className={colorStroke}>\r\n        <td className={s.tdtype}>{UpperCase(transaction.type)}</td>\r\n        <td>{transaction.amount}</td>\r\n        <td>{transaction.currency}</td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <table className={s.transaction}>\r\n      <thead>\r\n        <tr>\r\n          <th className=\"\">Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>{arrayTransaction}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  transaction: PropTypes.shape({\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.number.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\nimport Section from './components/Section';\n\nimport Profile from './components/profile/Profile';\nimport user from './components/profile/user.json';\n\nimport Statistics from './components/Statistics/Statistics';\nimport statisticsData from './components/Statistics/statistical-data.json';\n\nimport FriendsList from './components/friends/FriendsList';\nimport friends from './components/friends/Friends.json';\n\nimport TransactionHistory from './components/transaction/Transaction';\nimport transactions from './components/transaction/transactions.json';\n\nexport default function App() {\n  return (\n    <>\n      <Section title=\"Profile\">\n        <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n      </Section>\n\n      <Section title=\"Statistic\">\n        <Statistics title=\"Upload stats\" statistics={statisticsData} />\n      </Section>\n\n      <Section title=\"FriendsList\">\n        <FriendsList friends={friends} />\n      </Section>\n\n      <Section title=\"TransactionHistory\">\n        <TransactionHistory transactions={transactions} />\n      </Section>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}